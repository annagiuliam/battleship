[{"/home/annagiuliam/Documents/odin/react/battleship/src/index.js":"1","/home/annagiuliam/Documents/odin/react/battleship/src/App.js":"2","/home/annagiuliam/Documents/odin/react/battleship/src/functions/gameFlow.js":"3","/home/annagiuliam/Documents/odin/react/battleship/src/components/Board.js":"4","/home/annagiuliam/Documents/odin/react/battleship/src/functions/gameBoardFactory.js":"5","/home/annagiuliam/Documents/odin/react/battleship/src/functions/helpers.js":"6","/home/annagiuliam/Documents/odin/react/battleship/src/functions/shipFactory.js":"7","/home/annagiuliam/Documents/odin/react/battleship/src/functions/compPlayerFactory.js":"8","/home/annagiuliam/Documents/odin/react/battleship/src/components/GameSection.js":"9","/home/annagiuliam/Documents/odin/react/battleship/src/components/PlayerSection.js":"10","/home/annagiuliam/Documents/odin/react/battleship/src/components/RestartButton.js":"11","/home/annagiuliam/Documents/odin/react/battleship/src/components/HeaderSection.js":"12"},{"size":197,"mtime":1611845683044,"results":"13","hashOfConfig":"14"},{"size":306,"mtime":1613383633232,"results":"15","hashOfConfig":"14"},{"size":216,"mtime":1612449792494,"results":"16","hashOfConfig":"14"},{"size":816,"mtime":1613128405931,"results":"17","hashOfConfig":"14"},{"size":2032,"mtime":1613061509326,"results":"18","hashOfConfig":"14"},{"size":2892,"mtime":1612448550802,"results":"19","hashOfConfig":"14"},{"size":304,"mtime":1612434089902,"results":"20","hashOfConfig":"14"},{"size":2896,"mtime":1613128828159,"results":"21","hashOfConfig":"14"},{"size":3434,"mtime":1613385746021,"results":"22","hashOfConfig":"14"},{"size":267,"mtime":1613126694067,"results":"23","hashOfConfig":"14"},{"size":221,"mtime":1613125775127,"results":"24","hashOfConfig":"14"},{"size":211,"mtime":1613125977107,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"3lnyej",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/annagiuliam/Documents/odin/react/battleship/src/index.js",[],["53","54"],"/home/annagiuliam/Documents/odin/react/battleship/src/App.js",[],"/home/annagiuliam/Documents/odin/react/battleship/src/functions/gameFlow.js",[],["55","56"],"/home/annagiuliam/Documents/odin/react/battleship/src/components/Board.js",["57","58"],"import React from \"react\";\n\nconst Board = (props) => {\n  const { board, type, score, totalScore } = props;\n  const canClick = type === \"computer\";\n\n  return (\n    <div className={`board ${type}`}>\n      {board.map((row, index) => {\n        return (\n          <div key={index} className=\"row\">\n            {row.map((square) => {\n              const [x, y] = square.coords;\n              const id = x.toString() + y.toString();\n              return (\n                <div\n                  key={id}\n                  className={`square ${square.status}`}\n                  onClick={\n                    canClick ? () => props.onClick(square.coords) : undefined\n                  }\n                ></div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Board;\n","/home/annagiuliam/Documents/odin/react/battleship/src/functions/gameBoardFactory.js",[],"/home/annagiuliam/Documents/odin/react/battleship/src/functions/helpers.js",[],"/home/annagiuliam/Documents/odin/react/battleship/src/functions/shipFactory.js",[],"/home/annagiuliam/Documents/odin/react/battleship/src/functions/compPlayerFactory.js",[],"/home/annagiuliam/Documents/odin/react/battleship/src/components/GameSection.js",["59","60"],"/home/annagiuliam/Documents/odin/react/battleship/src/components/PlayerSection.js",[],"/home/annagiuliam/Documents/odin/react/battleship/src/components/RestartButton.js",[],"/home/annagiuliam/Documents/odin/react/battleship/src/components/HeaderSection.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":24,"nodeType":"69","messageId":"70","endLine":4,"endColumn":29},{"ruleId":"67","severity":1,"message":"71","line":4,"column":31,"nodeType":"69","messageId":"70","endLine":4,"endColumn":41},{"ruleId":"67","severity":1,"message":"72","line":25,"column":10,"nodeType":"69","messageId":"70","endLine":25,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":29,"column":3,"nodeType":"69","endLine":29,"endColumn":12,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],["76"],["77"],"no-unused-vars","'score' is assigned a value but never used.","Identifier","unusedVar","'totalScore' is assigned a value but never used.","'displayWin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCompTurn'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [humanScore, compScore] as a second argument to the useEffect Hook.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Add dependencies array: [humanScore, compScore]",{"range":"81","text":"82"},[1183,1183],", [humanScore, compScore]"]