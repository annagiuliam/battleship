[{"/home/annagiuliam/Documents/odin/react/battleship/src/index.js":"1","/home/annagiuliam/Documents/odin/react/battleship/src/App.js":"2","/home/annagiuliam/Documents/odin/react/battleship/src/factories/boardFactory.js":"3","/home/annagiuliam/Documents/odin/react/battleship/src/factories/helpers.js":"4","/home/annagiuliam/Documents/odin/react/battleship/src/factories/shipFactory.js":"5"},{"size":197,"mtime":1611845683044,"results":"6","hashOfConfig":"7"},{"size":878,"mtime":1612265173185,"results":"8","hashOfConfig":"7"},{"size":1053,"mtime":1612266751517,"results":"9","hashOfConfig":"7"},{"size":2809,"mtime":1612265639233,"results":"10","hashOfConfig":"7"},{"size":306,"mtime":1612257198434,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"3lnyej",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/annagiuliam/Documents/odin/react/battleship/src/index.js",[],["24","25"],"/home/annagiuliam/Documents/odin/react/battleship/src/App.js",["26","27"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport boardFactory from \"./factories/boardFactory\";\n\nfunction App() {\n  const [gameBoard, setGameBoard] = useState(boardFactory(10));\n  const [board, setBoard] = useState(gameBoard.board);\n  // const board = gameBoard.board;\n\n  useEffect(() => {\n    console.log(gameBoard.receiveAttack([0, 1]));\n    console.log(gameBoard.board);\n    console.log(gameBoard.shipYard);\n  });\n\n  return (\n    <div className=\"board\">\n      {board.map((row) => {\n        return (\n          <div className=\"row\">\n            {row.map((square) => {\n              return (\n                <div className=\"board-square\">\n                  {!square.status ? \"O\" : square.status}\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","/home/annagiuliam/Documents/odin/react/battleship/src/factories/boardFactory.js",[],"/home/annagiuliam/Documents/odin/react/battleship/src/factories/helpers.js",[],"/home/annagiuliam/Documents/odin/react/battleship/src/factories/shipFactory.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":7,"column":21,"nodeType":"34","messageId":"35","endLine":7,"endColumn":33},{"ruleId":"32","severity":1,"message":"36","line":8,"column":17,"nodeType":"34","messageId":"35","endLine":8,"endColumn":25},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'setGameBoard' is assigned a value but never used.","Identifier","unusedVar","'setBoard' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]